name: ESPHome Firmware Build

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine build type and set variables
        id: build_type
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "BUILD_TYPE=release" >> $GITHUB_OUTPUT
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_EVENT_NAME == 'release' ]]; then
            echo "BUILD_TYPE=release" >> $GITHUB_OUTPUT
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "BUILD_TYPE=latest" >> $GITHUB_OUTPUT
            echo "VERSION=latest-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
          fi

      - name: Replace project version
        run: |
          sed -i "s/version: dev/version: ${{ needs.prepare.outputs.version }}/g" ${{ matrix.file }}

      - name: Build firmware with ESPHome
        uses: esphome/build-action@v6
        id: esphome-build
        with:
          yaml-file: 'rowi2-plug.factory.yaml'
          complete-manifest: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ steps.build_type.outputs.BUILD_TYPE }}
          path: ${{ steps.esphome-build.outputs.binaries-path }}

      - name: Upload firmware to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.esphome-build.outputs.binaries-path }}/**
          draft: false
          prerelease: ${{ github.event.release.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/') && github.event_name != 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.esphome-build.outputs.binaries-path }}/**
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Latest Build
        if: github.ref == 'refs/heads/main' && !startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: Latest Build
          files: ${{ steps.esphome-build.outputs.binaries-path }}/**
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}