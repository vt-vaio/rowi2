# Energy Meter Connection
uart:
  id: uart_bus
  tx_pin: GPIO17
  rx_pin: GPIO16
  baud_rate: 4800
  stop_bits: 1

number:
  - platform: template
    name: "Cal Current"
    id: current_calibration_ui
    unit_of_measurement: "%"
    min_value: -10
    max_value: 10
    step: 0.01
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:percent"
    entity_category: config
    on_value:
      - lambda: 'id(current_calibrated).update();'
  - platform: template
    name: "Cal Voltage"
    id: voltage_calibration_ui
    unit_of_measurement: "%"
    min_value: -10
    max_value: 10
    step: 0.01
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:percent"
    entity_category: config
    on_value:
      - lambda: 'id(voltage_calibrated).update();'

sensor:
  - platform: bl0940
    uart_id: uart_bus
    tuya_mode: false
    resistor_one: 0.511
    voltage:
      id: bl0940_voltage
      name: 'Voltage'
      accuracy_decimals: 3
    current:
      id: bl0940_current
      name: 'Current'
      accuracy_decimals: 3
    power:
      id: bl0940_power
      name: 'Power'
    energy:
      id: bl0940_energy
      name: 'Energy'
    internal_temperature:
      name: 'bl0940 Internal temperature'
      entity_category: diagnostic
    update_interval: 5s

  - platform: template
    name: "Current Calibrated"
    id: current_calibrated
    device_class: current
    accuracy_decimals: 3
    unit_of_measurement: "A"
    lambda: |-
      float cal = (100 + id(current_calibration_ui).state) / 100;
      if (isnan(id(bl0940_current).state)) {
        return id(bl0940_current).state;
      } else {
        return id(bl0940_current).state * cal;
      }
    update_interval: 5s
  - platform: template
    name: "Voltage Calibrated"
    id: voltage_calibrated
    device_class: voltage
    accuracy_decimals: 3
    unit_of_measurement: "V"
    lambda: |-
      float cal = (100 + id(voltage_calibration_ui).state) / 100;
      if (isnan(id(bl0940_voltage).state)) {
        return id(bl0940_voltage).state;
      } else {
        return id(bl0940_voltage).state * cal;
      }
    update_interval: 5s