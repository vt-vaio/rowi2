name: Build ESPHome Firmware

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering
  release:
    types: [created]  # Triggered when a release is created

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      commit_sha: ${{ steps.version.outputs.commit_sha }}
      package_ref: ${{ steps.version.outputs.package_ref }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

        # Determine version based on event type
      - name: Set version information
        id: version
        run: |
          COMMIT=$(git rev-parse --short HEAD)
          echo commit_sha=${COMMIT} >> $GITHUB_OUTPUT
          if [[ "${{ github.event_name }}" == "release" ]]; then
            # Extract version from release tag (remove v prefix if present)
            VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')
            echo version=${VERSION} >> $GITHUB_OUTPUT
            echo package_ref=${{ github.ref_name }} >> $GITHUB_OUTPUT
            echo "Using release version: ${VERSION}"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # For dev builds on main
            DATE=$(date +'%Y%m%d')
            DEV_VERSION="dev-${DATE}-${COMMIT}"
            echo version=${DEV_VERSION} >> $GITHUB_OUTPUT
            echo package_ref=${{ github.sha }} >> $GITHUB_OUTPUT
            echo "Using development version: ${DEV_VERSION}"
          else
            # For PRs and other branches
            echo version=development >> $GITHUB_OUTPUT
            echo package_ref=${{ github.head_ref }} >> $GITHUB_OUTPUT
            echo "Using default development version"
          fi

  build:
    runs-on: ubuntu-latest
    needs: [prepare]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
      - name: Replace project version
        run: |
          sed -i "s/version: dev/version: ${{ needs.prepare.outputs.version }}/g" rowi2-plug.factory.yaml
      - name: Replace remote_package ref
        run: |
          sed -i "s|ref: main|ref: ${{ needs.prepare.outputs.package_ref }}|g" rowi2-plug.yaml
      - name: Build firmware with ESPHome
        uses: esphome/build-action@v7
        id: esphome-build
        with:
          yaml-file: 'rowi2-plug.factory.yaml'
          complete-manifest: true

      - name: Upload artifacts
        id: upload-artifacts
        uses: actions/upload-artifact@v5.0.0
        with:
          name: firmware-${{ needs.prepare.outputs.version }}
          path: ${{ steps.esphome-build.outputs.name }}

        # Update the latest-dev tag
      - name: Update latest-dev tag
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -f latest-dev
          git push origin latest-dev -f

        # Update the stable tag
      - name: Update stable tag
        if: github.event_name == 'release'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -f stable
          git push origin stable -f

  publish:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - build
    steps:
      - uses: actions/download-artifact@v6.0.0
        with:
          path: output
          name: firmware-${{ needs.prepare.outputs.version }}

      - name: Genearate build date
        id: generate-date
        run: |
          echo gen_date=$(date +'%Y-%m-%d %H:%M:%S') >> $GITHUB_OUTPUT

        # Create/update the latest-dev tag
      - name: Create/Update latest-dev Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2.4.1
        with:
          name: Latest Development Build
          tag_name: latest-dev
          files: ./output/*
          prerelease: true
          body: |
            Latest development build generated from commit ${{ github.sha }}
            Version: ${{ needs.prepare.outputs.version }}
            Date: ${{ steps.generate-date.outputs.gen_date }}

            This is an automated development build and may contain unstable features.
            For production use, please use the latest stable release.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # Create/update the stable tag
      - name: Create/Update stable
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2.4.1
        with:
          tag_name: stable
          files: ./output/*
          body: |
            Latest release build generated from commit ${{ github.sha }}
            Version: ${{ needs.prepare.outputs.version }}
            Date: ${{ steps.generate-date.outputs.gen_date }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # Upload build to an actual release
      - name: Upload to existing release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2.4.1
        with:
          tag_name: ${{ github.ref_name }}
          files: ./output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
